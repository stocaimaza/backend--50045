<h1>Bienvenido al Panel de Usuarios Premium</h1>

<!-- Formulario para agregar un nuevo producto -->
<h2>Agregar Nuevo Producto</h2>
<form id="productForm">
    <label for="title">Título:</label>
    <input type="text" id="title" name="title" required>

    <label for="description">Descripción:</label>
    <textarea id="description" name="description" required></textarea>

    <label for="price">Precio:</label>
    <input type="number" id="price" name="price" required>

    <label for="img">Imagen:</label>
    <input type="text" id="img" name="img" placeholder="URL de la imagen">

    <label for="code">Código:</label>
    <input type="text" id="code" name="code" required>

    <label for="stock">Stock:</label>
    <input type="number" id="stock" name="stock" required>

    <label for="category">Categoría:</label>
    <input type="text" id="category" name="category" required>

    <label for="status">Estado:</label>
    <select id="status" name="status">
        <option value="true">Activo</option>
        <option value="false">Inactivo</option>
    </select>

    <button type="submit">Agregar Producto</button>
</form>

<!-- Lista de productos del usuario -->
<h2>Tus Productos</h2>
<ul id="userProductsList">
    {{#each userProducts}}
    <li>
        <h3>{{this.title}}</h3>
        <p>{{this.description}}</p>
        <p>Precio: ${{this.price}}</p>
        <form class="deleteForm" data-product-id="{{this._id}}">
            <button type="button" class="deleteButton">Eliminar</button>
        </form>
    </li>
    {{/each}}
</ul>

<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.2.0/socket.io.js"></script>
<script>
    const socket = io();

    // Manejar la solicitud POST del formulario
    document.getElementById('productForm').addEventListener('submit', async (event) => {
        event.preventDefault();
        const formData = new FormData(event.target);
        const productData = {};
        formData.forEach((value, key) => {
            productData[key] = value;
        });
        const response = await fetch('/api/products', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(productData)
        });
        if (response.ok) {
            // Limpiar el formulario después de agregar el producto
            event.target.reset();
        }
    });

    // Manejar actualizaciones en tiempo real de la lista de productos
    socket.on('productos', (productos) => {
        // Actualizar la lista de productos del usuario
        const productList = document.getElementById('userProductsList');
        productList.innerHTML = ''; // Limpiar la lista antes de agregar los nuevos productos
        productos.forEach(product => {
            const newItem = document.createElement('li');
            newItem.innerHTML = `
                <h3>${product.title}</h3>
                <p>${product.description}</p>
                <p>Precio: $${product.price}</p>
                <form class="deleteForm" data-product-id="${product._id}">
                    <button type="button" class="deleteButton">Eliminar</button>
                </form>
            `;
            productList.appendChild(newItem);
        });
    });

    // Manejar la eliminación de productos
    document.getElementById('userProductsList').addEventListener('click', async (event) => {
        if (event.target.classList.contains('deleteButton')) {
            const productId = event.target.parentElement.dataset.productId;
            const response = await fetch(`/api/products/${productId}`, {
                method: 'DELETE'
            });
            if (response.ok) {
                // Eliminar el producto de la lista después de eliminarlo del servidor
                event.target.parentElement.parentElement.remove();
            }
        }
    });
</script>